{
	"compilerOptions": {
		/* Visit https://aka.ms/tsconfig.json to read more about this file */

		/* Basic Options */
		"target": "esnext", // ECMAScript target version
		"module": "node16", // Module code generation
		"jsx": "react", // JSX code generation
		"declaration": true, // Generates corresponding '.d.ts' file.
		"noEmitOnError": true, // Do not emit outputs if any errors were reported.
		"newLine": "lf", // Use the specified EOF sequence to be used when emitting files: lf -> unix
		"removeComments": true, // Do not emit comments to output.
		// "outDir": "dist", // Redirect output structure to the directory.
		// "allowJs": true, // Allow JavaScript files to be compiled.
		"lib": [
			"ES2022" // Node.js 18
		], // List of library files to be included in the compilation.
		 "skipLibCheck": true, // Skip type checking of all declaration files (*.d.ts).

		/* Strict Type-Checking Options */
		"strict": true, // Enable all strict type-checking options.
		// https://stackoverflow.com/a/50241920/9387542
		"strictPropertyInitialization": false, // Enable strict checking of property initialization in classes.
		"noUncheckedIndexedAccess": true,
		"noPropertyAccessFromIndexSignature": true,
		"noImplicitOverride": true,

		/* Additional Checks */
		"noUnusedLocals": true, // Report errors on unused locals.
		"noUnusedParameters": true, // Report errors on unused parameters.
		"noImplicitReturns": true, // Report error when not all code paths in function return a value.
		"noFallthroughCasesInSwitch": true, // Report errors for fallthrough cases in switch statement.

		/* Module Resolution Options */
		"moduleResolution": "node16", // Module resolution strategy
		"moduleDetection": "force",
		"resolveJsonModule": false, // Allow importing, extracting types from and generating .json files. ESM doesn't yet support JSON modules.
		"esModuleInterop": true, // Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports.
		// "types": [], // Type declaration files to be included in compilation.

		/* Experimental Options */
		"experimentalDecorators": true, // Enables experimental support for ES7 decorators.
		"emitDecoratorMetadata": true, // Enables experimental support for emitting type metadata for decorators.

		/* Advanced Options */
		"forceConsistentCasingInFileNames": true, // Disallow inconsistently-cased references to the same file.
		"stripInternal": false // Don't emit declarations for internal functions
	},
	"exclude": [
		"node_modules"
	]
}
